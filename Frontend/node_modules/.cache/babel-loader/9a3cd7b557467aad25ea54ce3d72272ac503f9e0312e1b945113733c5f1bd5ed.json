{"ast":null,"code":"var _jsxFileName = \"/home/dipti/Codes/QRCode_Generator/Frontend/src/components/ViewProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; // If you plan to use React Router for routing\nimport { readProfile } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewProfile() {\n  _s();\n  const {\n    id\n  } = useParams(); // If you use React Router, this will extract the profile ID from the URL\n\n  const [profile, setProfile] = useState(null);\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const response = await readProfile(id); // Use the readProfile API function to fetch profile data by ID\n        if (response.profile) {\n          setProfile(response.profile);\n        } else {\n          console.error('Profile not found');\n        }\n      } catch (error) {\n        console.error('Error fetching profile', error);\n      }\n    };\n    fetchProfile();\n  }, [id]); // Re-fetch when the ID changes (e.g., when navigating to a different profile)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"View Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), profile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Type: \", profile.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", profile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", profile.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address: \", profile.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Contact: \", profile.contact]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Website: \", profile.website]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewProfile, \"goCgvpq88Pn9HrFtnPn90fAxkJE=\", false, function () {\n  return [useParams];\n});\n_c = ViewProfile;\nexport default ViewProfile;\nvar _c;\n$RefreshReg$(_c, \"ViewProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","readProfile","ViewProfile","id","profile","setProfile","fetchProfile","response","console","error","type","name","email","address","contact","website"],"sources":["/home/dipti/Codes/QRCode_Generator/Frontend/src/components/ViewProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; // If you plan to use React Router for routing\nimport { readProfile } from '../api';\n\nfunction ViewProfile() {\n  const { id } = useParams(); // If you use React Router, this will extract the profile ID from the URL\n\n  const [profile, setProfile] = useState(null);\n\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const response = await readProfile(id); // Use the readProfile API function to fetch profile data by ID\n        if (response.profile) {\n          setProfile(response.profile);\n        } else {\n          console.error('Profile not found');\n        }\n      } catch (error) {\n        console.error('Error fetching profile', error);\n      }\n    };\n\n    fetchProfile();\n  }, [id]); // Re-fetch when the ID changes (e.g., when navigating to a different profile)\n\n  return (\n    <div>\n      <h2>View Profile</h2>\n      {profile ? (\n        <div>\n          <p>Type: {profile.type}</p>\n          <p>Name: {profile.name}</p>\n          <p>Email: {profile.email}</p>\n          <p>Address: {profile.address}</p>\n          <p>Contact: {profile.contact}</p>\n          <p>Website: {profile.website}</p>\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n}\n\nexport default ViewProfile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB,CAAC,CAAC;AAC9C,SAASC,WAAW,QAAQ,QAAQ;AAAC;AAErC,SAASC,WAAW,GAAG;EAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGH,SAAS,EAAE,CAAC,CAAC;;EAE5B,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMO,YAAY,GAAG,YAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMN,WAAW,CAACE,EAAE,CAAC,CAAC,CAAC;QACxC,IAAII,QAAQ,CAACH,OAAO,EAAE;UACpBC,UAAU,CAACE,QAAQ,CAACH,OAAO,CAAC;QAC9B,CAAC,MAAM;UACLI,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;QACpC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDH,YAAY,EAAE;EAChB,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEV,oBACE;IAAA,wBACE;MAAA,UAAI;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,EACpBC,OAAO,gBACN;MAAA,wBACE;QAAA,WAAG,QAAM,EAACA,OAAO,CAACM,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC3B;QAAA,WAAG,QAAM,EAACN,OAAO,CAACO,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC3B;QAAA,WAAG,SAAO,EAACP,OAAO,CAACQ,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC7B;QAAA,WAAG,WAAS,EAACR,OAAO,CAACS,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eACjC;QAAA,WAAG,WAAS,EAACT,OAAO,CAACU,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eACjC;QAAA,WAAG,WAAS,EAACV,OAAO,CAACW,OAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7B,gBAEN;MAAA,UAAG;IAAU;MAAA;MAAA;MAAA;IAAA,QACd;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GAvCQb,WAAW;EAAA,QACHF,SAAS;AAAA;AAAA,KADjBE,WAAW;AAyCpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}