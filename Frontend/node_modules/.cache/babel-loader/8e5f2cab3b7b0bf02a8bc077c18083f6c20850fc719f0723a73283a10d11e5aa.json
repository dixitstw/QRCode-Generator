{"ast":null,"code":"var _jsxFileName = \"/home/dipti/Codes/QRCode_Generator/Frontend/src/components/DownloadQRCode.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { readQR } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DownloadQRCode() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [qrCodeData, setQRCodeData] = useState(null);\n  useEffect(() => {\n    const fetchQRCode = async () => {\n      try {\n        const response = await readQR(id);\n        if (response.qr) {\n          setQRCodeData(response.qr.data);\n        } else {\n          console.error('QR code not found');\n        }\n      } catch (error) {\n        console.error('Error fetching QR code', error);\n      }\n    };\n    fetchQRCode();\n  }, [id]);\n  const handleDownload = () => {\n    const dataURL = `data:image/png;base64,${qrCodeData}`;\n    const downloadLink = document.createElement('a');\n    downloadLink.href = dataURL;\n    downloadLink.download = 'qr_code.png';\n    downloadLink.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Download QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), qrCodeData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the button below to download the QR code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(DownloadQRCode, \"Gl7H15XNv5Gcvsyj1jkhKFl5odc=\", false, function () {\n  return [useParams];\n});\n_c = DownloadQRCode;\nexport default DownloadQRCode;\nvar _c;\n$RefreshReg$(_c, \"DownloadQRCode\");","map":{"version":3,"names":["React","useState","useEffect","useParams","readQR","jsxDEV","_jsxDEV","DownloadQRCode","_s","id","qrCodeData","setQRCodeData","fetchQRCode","response","qr","data","console","error","handleDownload","dataURL","downloadLink","document","createElement","href","download","click","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/dipti/Codes/QRCode_Generator/Frontend/src/components/DownloadQRCode.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; \nimport { readQR } from '../api';\n\nfunction DownloadQRCode() {\n  const { id } = useParams(); \n\n  const [qrCodeData, setQRCodeData] = useState(null);\n\n  useEffect(() => {\n    const fetchQRCode = async () => {\n      try {\n        const response = await readQR(id); \n        if (response.qr) {\n          setQRCodeData(response.qr.data);\n        } else {\n          console.error('QR code not found');\n        }\n      } catch (error) {\n        console.error('Error fetching QR code', error);\n      }\n    };\n\n    fetchQRCode();\n  }, [id]);\n\n  const handleDownload = () => {\n    const dataURL = `data:image/png;base64,${qrCodeData}`;\n    const downloadLink = document.createElement('a');\n    downloadLink.href = dataURL;\n    downloadLink.download = 'qr_code.png';\n    downloadLink.click();\n  };\n\n  return (\n    <div>\n      <h2>Download QR Code</h2>\n      {qrCodeData ? (\n        <div>\n          <p>Click the button below to download the QR code:</p>\n          <button onClick={handleDownload}>Download QR Code</button>\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n}\n\nexport default DownloadQRCode;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAE1B,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,MAAM,CAACK,EAAE,CAAC;QACjC,IAAII,QAAQ,CAACC,EAAE,EAAE;UACfH,aAAa,CAACE,QAAQ,CAACC,EAAE,CAACC,IAAI,CAAC;QACjC,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;QACpC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDL,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,OAAO,GAAI,yBAAwBT,UAAW,EAAC;IACrD,MAAMU,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IAChDF,YAAY,CAACG,IAAI,GAAGJ,OAAO;IAC3BC,YAAY,CAACI,QAAQ,GAAG,aAAa;IACrCJ,YAAY,CAACK,KAAK,CAAC,CAAC;EACtB,CAAC;EAED,oBACEnB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBpB,UAAU,gBACTJ,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAG;MAA+C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACtDxB,OAAA;QAAQyB,OAAO,EAAEb,cAAe;QAAAQ,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,gBAENxB,OAAA;MAAAoB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtB,EAAA,CA3CQD,cAAc;EAAA,QACNJ,SAAS;AAAA;AAAA6B,EAAA,GADjBzB,cAAc;AA6CvB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}