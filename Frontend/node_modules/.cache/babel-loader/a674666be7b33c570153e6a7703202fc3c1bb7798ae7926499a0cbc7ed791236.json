{"ast":null,"code":"var _jsxFileName = \"/home/dipti/Codes/QRCode_Generator/Frontend/src/components/CreateQR.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport QRCode from 'qrcode'; // Import the qrcode library\nimport { readProfile } from '../api'; // Import your API function to read the profile\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateQR() {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the profile ID from the route parameter\n\n  const [profile, setProfile] = useState(null);\n  const [qrData, setQRData] = useState('');\n  useEffect(() => {\n    // Fetch the profile data by ID when the component mounts\n    async function fetchProfile() {\n      try {\n        const result = await readProfile(id); // Call your API function to read the profile by ID\n        setProfile(result);\n      } catch (error) {\n        console.error('Error fetching profile:', error);\n      }\n    }\n    fetchProfile();\n  }, [id]);\n  useEffect(() => {\n    // Generate QR code data based on the profile information\n    if (profile) {\n      const qrProfileData = {\n        type: profile.type,\n        name: profile.name,\n        email: profile.email,\n        address: profile.address,\n        contact: profile.contact,\n        website: profile.website\n      };\n      const qrCodeData = JSON.stringify(qrProfileData);\n\n      // Generate the QR code and set it as data URL\n      QRCode.toDataURL(qrCodeData, (err, url) => {\n        if (err) {\n          console.error('Error generating QR code:', err);\n        } else {\n          setQRData(url);\n        }\n      });\n    }\n  }, [profile]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [profile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profile Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", profile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", profile.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address: \", profile.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Contact: \", profile.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Website: \", profile.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), qrData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: qrData,\n        alt: \"QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateQR, \"txRBd7Rv6yEh+H1IYswHT8qn0Fg=\", false, function () {\n  return [useParams];\n});\n_c = CreateQR;\nexport default CreateQR;\nvar _c;\n$RefreshReg$(_c, \"CreateQR\");","map":{"version":3,"names":["React","useState","useEffect","useParams","QRCode","readProfile","jsxDEV","_jsxDEV","CreateQR","_s","id","profile","setProfile","qrData","setQRData","fetchProfile","result","error","console","qrProfileData","type","name","email","address","contact","website","qrCodeData","JSON","stringify","toDataURL","err","url","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/home/dipti/Codes/QRCode_Generator/Frontend/src/components/CreateQR.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport QRCode from 'qrcode'; // Import the qrcode library\nimport { readProfile } from '../api'; // Import your API function to read the profile\n\nfunction CreateQR() {\n  const { id } = useParams(); // Get the profile ID from the route parameter\n\n  const [profile, setProfile] = useState(null);\n  const [qrData, setQRData] = useState('');\n\n  useEffect(() => {\n    // Fetch the profile data by ID when the component mounts\n    async function fetchProfile() {\n      try {\n        const result = await readProfile(id); // Call your API function to read the profile by ID\n        setProfile(result);\n      } catch (error) {\n        console.error('Error fetching profile:', error);\n      }\n    }\n\n    fetchProfile();\n  }, [id]);\n\n  useEffect(() => {\n    // Generate QR code data based on the profile information\n    if (profile) {\n      const qrProfileData = {\n        type: profile.type,\n        name: profile.name,\n        email: profile.email,\n        address: profile.address,\n        contact: profile.contact,\n        website: profile.website,\n      };\n\n      const qrCodeData = JSON.stringify(qrProfileData);\n\n      // Generate the QR code and set it as data URL\n      QRCode.toDataURL(qrCodeData, (err, url) => {\n        if (err) {\n          console.error('Error generating QR code:', err);\n        } else {\n          setQRData(url);\n        }\n      });\n    }\n  }, [profile]);\n\n  return (\n    <div>\n      {profile ? (\n        <div>\n          <h2>Profile Details</h2>\n          <p>Name: {profile.name}</p>\n          <p>Email: {profile.email}</p>\n          <p>Address: {profile.address}</p>\n          <p>Contact: {profile.email}</p>\n          <p>Website: {profile.email}</p>\n\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n\n      {qrData && (\n        <div>\n          <h2>QR Code</h2>\n          <img src={qrData} alt=\"QR Code\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CreateQR;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}