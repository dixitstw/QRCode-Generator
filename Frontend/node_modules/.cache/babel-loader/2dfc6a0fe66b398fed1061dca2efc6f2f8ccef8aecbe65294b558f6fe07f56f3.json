{"ast":null,"code":"const BASE_URL = 'http://localhost:5000/api';\n\n// Function to create a new profile\nexport async function createProfile(profileData) {\n  const response = await fetch(`${BASE_URL}/profiles/create`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(profileData)\n  });\n  return await response.json();\n}\n\n// Function to read a profile by ID\nexport async function readProfile(profileId) {\n  const response = await fetch(`${BASE_URL}/profiles/read/${profileId}`);\n  return await response.json();\n}\n\n// Function to update a profile by ID\nexport async function updateProfile(profileId, profileData) {\n  const response = await fetch(`${BASE_URL}/profiles/update/${profileId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(profileData)\n  });\n  return await response.json();\n}\n\n// Function to read a QR code by ID\nexport async function readQR(qrId) {\n  const response = await fetch(`${BASE_URL}/qrs/read/${qrId}`);\n  return await response.json();\n}","map":{"version":3,"names":["BASE_URL","createProfile","profileData","response","fetch","method","headers","body","JSON","stringify","json","readProfile","profileId","updateProfile","readQR","qrId"],"sources":["/home/dipti/Codes/QRCode_Generator/Frontend/src/api.js"],"sourcesContent":["const BASE_URL = 'http://localhost:5000/api'; \n\n// Function to create a new profile\nexport async function createProfile(profileData) {\n  const response = await fetch(`${BASE_URL}/profiles/create`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(profileData),\n  });\n  return await response.json();\n}\n\n// Function to read a profile by ID\nexport async function readProfile(profileId) {\n  const response = await fetch(`${BASE_URL}/profiles/read/${profileId}`);\n  return await response.json();\n}\n\n// Function to update a profile by ID\nexport async function updateProfile(profileId, profileData) {\n  const response = await fetch(`${BASE_URL}/profiles/update/${profileId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(profileData),\n  });\n  return await response.json();\n}\n\n// Function to read a QR code by ID\nexport async function readQR(qrId) {\n  const response = await fetch(`${BASE_URL}/qrs/read/${qrId}`);\n  return await response.json();\n}\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,2BAA2B;;AAE5C;AACA,OAAO,eAAeC,aAAa,CAACC,WAAW,EAAE;EAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,kBAAiB,EAAE;IAC1DK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;EAClC,CAAC,CAAC;EACF,OAAO,MAAMC,QAAQ,CAACO,IAAI,EAAE;AAC9B;;AAEA;AACA,OAAO,eAAeC,WAAW,CAACC,SAAS,EAAE;EAC3C,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,kBAAiBY,SAAU,EAAC,CAAC;EACtE,OAAO,MAAMT,QAAQ,CAACO,IAAI,EAAE;AAC9B;;AAEA;AACA,OAAO,eAAeG,aAAa,CAACD,SAAS,EAAEV,WAAW,EAAE;EAC1D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,oBAAmBY,SAAU,EAAC,EAAE;IACvEP,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;EAClC,CAAC,CAAC;EACF,OAAO,MAAMC,QAAQ,CAACO,IAAI,EAAE;AAC9B;;AAEA;AACA,OAAO,eAAeI,MAAM,CAACC,IAAI,EAAE;EACjC,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,aAAYe,IAAK,EAAC,CAAC;EAC5D,OAAO,MAAMZ,QAAQ,CAACO,IAAI,EAAE;AAC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}